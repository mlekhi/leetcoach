{"ast":null,"code":"var _jsxFileName = \"/Users/madhavmalik/VSC Projects/leetcoach/client/src/pages/AudioTranscription/AudioTranscription.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { transcribeAudio } from '../../services/groqSTTService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioTranscription = () => {\n  _s();\n  const [transcription, setTranscription] = useState('');\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = async event => {\n    const file = event.target.files[0];\n    if (file) {\n      setLoading(true);\n      try {\n        const result = await transcribeAudio(file);\n        setTranscription(result.text); // Adjust based on actual response structure\n      } catch (error) {\n        console.error('Error during transcription:', error);\n      } finally {\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Speech-to-Text Transcription\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"audio/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Transcribing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }, this), transcription && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Transcription: \", transcription]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioTranscription, \"89cc5mDhEVlLgP4k8S4vxTb+ByY=\");\n_c = AudioTranscription;\nexport default AudioTranscription;\nvar _c;\n$RefreshReg$(_c, \"AudioTranscription\");","map":{"version":3,"names":["React","useState","transcribeAudio","jsxDEV","_jsxDEV","AudioTranscription","_s","transcription","setTranscription","loading","setLoading","handleFileChange","event","file","target","files","result","text","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","_c","$RefreshReg$"],"sources":["/Users/madhavmalik/VSC Projects/leetcoach/client/src/pages/AudioTranscription/AudioTranscription.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { transcribeAudio } from '../../services/groqSTTService';\n\nconst AudioTranscription = () => {\n    const [transcription, setTranscription] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const handleFileChange = async (event) => {\n        const file = event.target.files[0];\n        if (file) {\n            setLoading(true);\n            try {\n                const result = await transcribeAudio(file);\n                setTranscription(result.text); // Adjust based on actual response structure\n            } catch (error) {\n                console.error('Error during transcription:', error);\n            } finally {\n                setLoading(false);\n            }\n        }\n    };\n\n    return (\n        <div>\n            <h1>Speech-to-Text Transcription</h1>\n            <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} />\n            {loading && <p>Transcribing...</p>}\n            {transcription && <p>Transcription: {transcription}</p>}\n        </div>\n    );\n};\n\nexport default AudioTranscription;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMU,gBAAgB,GAAG,MAAOC,KAAK,IAAK;IACtC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,EAAE;MACNH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACA,MAAMM,MAAM,GAAG,MAAMd,eAAe,CAACW,IAAI,CAAC;QAC1CL,gBAAgB,CAACQ,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD,CAAC,SAAS;QACNR,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAgB,QAAA,gBACIhB,OAAA;MAAAgB,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCpB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEhB;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACjEf,OAAO,iBAAIL,OAAA;MAAAgB,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACjCjB,aAAa,iBAAIH,OAAA;MAAAgB,QAAA,GAAG,iBAAe,EAACb,aAAa;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd,CAAC;AAAClB,EAAA,CA3BID,kBAAkB;AAAAuB,EAAA,GAAlBvB,kBAAkB;AA6BxB,eAAeA,kBAAkB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}