{"ast":null,"code":"var _jsxFileName = \"/Users/mlekhi/leetcoach/client/src/pages/AudioWave.js\",\n  _s = $RefreshSig$();\n// src/AudioWave.js\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioWave = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [stream, setStream] = useState(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const WIDTH = canvas.width;\n    const HEIGHT = canvas.height;\n    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    const analyser = audioCtx.createAnalyser();\n\n    // Request microphone access\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(mediaStream => {\n      setStream(mediaStream);\n      const microphone = audioCtx.createMediaStreamSource(mediaStream);\n      analyser.fftSize = 256;\n      const bufferLength = analyser.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      microphone.connect(analyser);\n      const draw = () => {\n        requestAnimationFrame(draw);\n        analyser.getByteFrequencyData(dataArray);\n        ctx.clearRect(0, 0, WIDTH, HEIGHT);\n        const barWidth = WIDTH / bufferLength * 2.5;\n        let barHeight;\n        let x = 0;\n        for (let i = 0; i < bufferLength; i++) {\n          barHeight = dataArray[i];\n          // Debugging: Log the dataArray values and audio context state\n          if (i % 10 === 0) {\n            console.log(`Bar ${i}: ${barHeight}`);\n          }\n\n          // Check if dataArray is being populated\n          if (dataArray.length === 0) {\n            console.error('dataArray is empty');\n          }\n          ctx.fillStyle = `rgba(0, 255, 0, ${barHeight / 256})`; // Adjust color for visibility\n          ctx.fillRect(x, HEIGHT - barHeight / 2, barWidth, barHeight / 2);\n          x += barWidth + 1;\n        }\n      };\n      draw();\n    }).catch(error => {\n      console.error('Error accessing microphone:', error);\n    });\n    return () => {\n      if (stream) {\n        stream.getTracks().forEach(track => track.stop());\n      }\n      audioCtx.close();\n    };\n  }, [stream]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    width: \"300\",\n    height: \"150\",\n    style: {\n      border: '1px solid #fff',\n      borderRadius: '4px',\n      backgroundColor: '#000'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(AudioWave, \"aBy3j59ydrS+XYMDv7T8udct80I=\");\n_c = AudioWave;\nexport default AudioWave;\nvar _c;\n$RefreshReg$(_c, \"AudioWave\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","AudioWave","_s","canvasRef","stream","setStream","canvas","current","ctx","getContext","WIDTH","width","HEIGHT","height","audioCtx","window","AudioContext","webkitAudioContext","analyser","createAnalyser","navigator","mediaDevices","getUserMedia","audio","then","mediaStream","microphone","createMediaStreamSource","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","connect","draw","requestAnimationFrame","getByteFrequencyData","clearRect","barWidth","barHeight","x","i","console","log","length","error","fillStyle","fillRect","catch","getTracks","forEach","track","stop","close","ref","style","border","borderRadius","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mlekhi/leetcoach/client/src/pages/AudioWave.js"],"sourcesContent":["// src/AudioWave.js\nimport React, { useEffect, useRef, useState } from 'react';\n\nconst AudioWave = () => {\n    const canvasRef = useRef(null);\n    const [stream, setStream] = useState(null);\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const WIDTH = canvas.width;\n        const HEIGHT = canvas.height;\n        const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n        const analyser = audioCtx.createAnalyser();\n\n        // Request microphone access\n        navigator.mediaDevices.getUserMedia({ audio: true })\n            .then((mediaStream) => {\n                setStream(mediaStream);\n                const microphone = audioCtx.createMediaStreamSource(mediaStream);\n                analyser.fftSize = 256;\n                const bufferLength = analyser.frequencyBinCount;\n                const dataArray = new Uint8Array(bufferLength);\n\n                microphone.connect(analyser);\n\n                const draw = () => {\n                    requestAnimationFrame(draw);\n                    analyser.getByteFrequencyData(dataArray);\n\n                    ctx.clearRect(0, 0, WIDTH, HEIGHT);\n\n                    const barWidth = (WIDTH / bufferLength) * 2.5;\n                    let barHeight;\n                    let x = 0;\n\n                    for (let i = 0; i < bufferLength; i++) {\n                        barHeight = dataArray[i];\n                        // Debugging: Log the dataArray values and audio context state\n                        if (i % 10 === 0) {\n                            console.log(`Bar ${i}: ${barHeight}`);\n                        }\n\n                        // Check if dataArray is being populated\n                        if (dataArray.length === 0) {\n                            console.error('dataArray is empty');\n                        }\n\n                        ctx.fillStyle = `rgba(0, 255, 0, ${barHeight / 256})`; // Adjust color for visibility\n                        ctx.fillRect(x, HEIGHT - barHeight / 2, barWidth, barHeight / 2);\n                        x += barWidth + 1;\n                    }\n                };\n\n                draw();\n            })\n            .catch((error) => {\n                console.error('Error accessing microphone:', error);\n            });\n\n        return () => {\n            if (stream) {\n                stream.getTracks().forEach(track => track.stop());\n            }\n            audioCtx.close();\n        };\n    }, [stream]);\n\n    return (\n        <canvas\n            ref={canvasRef}\n            width=\"300\"\n            height=\"150\"\n            style={{ border: '1px solid #fff', borderRadius: '4px', backgroundColor: '#000' }}\n        />\n    );\n};\n\nexport default AudioWave;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}