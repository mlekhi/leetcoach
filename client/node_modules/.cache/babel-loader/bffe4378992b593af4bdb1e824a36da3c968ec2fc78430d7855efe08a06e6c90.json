{"ast":null,"code":"// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class GroqError extends Error {}\nexport class APIError extends GroqError {\n  constructor(status, error, message, headers) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.error = error;\n  }\n  static makeMessage(status, error, message) {\n    const msg = error?.message ? typeof error.message === 'string' ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n  static generate(status, errorResponse, message, headers) {\n    if (!status) {\n      return new APIConnectionError({\n        cause: castToError(errorResponse)\n      });\n    }\n    const error = errorResponse;\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n    return new APIError(status, error, message, headers);\n  }\n}\nexport class APIUserAbortError extends APIError {\n  constructor({\n    message\n  } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n    this.status = undefined;\n  }\n}\nexport class APIConnectionError extends APIError {\n  constructor({\n    message,\n    cause\n  }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    this.status = undefined;\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({\n    message\n  } = {}) {\n    super({\n      message: message ?? 'Request timed out.'\n    });\n  }\n}\nexport class BadRequestError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 400;\n  }\n}\nexport class AuthenticationError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 401;\n  }\n}\nexport class PermissionDeniedError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 403;\n  }\n}\nexport class NotFoundError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 404;\n  }\n}\nexport class ConflictError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 409;\n  }\n}\nexport class UnprocessableEntityError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 422;\n  }\n}\nexport class RateLimitError extends APIError {\n  constructor() {\n    super(...arguments);\n    this.status = 429;\n  }\n}\nexport class InternalServerError extends APIError {}","map":{"version":3,"names":["castToError","GroqError","Error","APIError","constructor","status","error","message","headers","makeMessage","msg","JSON","stringify","generate","errorResponse","APIConnectionError","cause","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","undefined","APIConnectionTimeoutError"],"sources":["/Users/madhavmalik/VSC Projects/leetcoach/client/node_modules/groq-sdk/src/error.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { castToError, Headers } from './core';\n\nexport class GroqError extends Error {}\n\nexport class APIError extends GroqError {\n  readonly status: number | undefined;\n  readonly headers: Headers | undefined;\n  readonly error: Object | undefined;\n\n  constructor(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.error = error;\n  }\n\n  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {\n    const msg =\n      error?.message ?\n        typeof error.message === 'string' ?\n          error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    if (!status) {\n      return new APIConnectionError({ cause: castToError(errorResponse) });\n    }\n\n    const error = errorResponse as Record<string, any>;\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError {\n  override readonly status: undefined = undefined;\n\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError {\n  override readonly status: undefined = undefined;\n\n  constructor({ message, cause }: { message?: string; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({ message }: { message?: string } = {}) {\n    super({ message: message ?? 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError {\n  override readonly status: 400 = 400;\n}\n\nexport class AuthenticationError extends APIError {\n  override readonly status: 401 = 401;\n}\n\nexport class PermissionDeniedError extends APIError {\n  override readonly status: 403 = 403;\n}\n\nexport class NotFoundError extends APIError {\n  override readonly status: 404 = 404;\n}\n\nexport class ConflictError extends APIError {\n  override readonly status: 409 = 409;\n}\n\nexport class UnprocessableEntityError extends APIError {\n  override readonly status: 422 = 422;\n}\n\nexport class RateLimitError extends APIError {\n  override readonly status: 429 = 429;\n}\n\nexport class InternalServerError extends APIError {}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}